name: Extended Order Book Collection

on:
  workflow_dispatch:
    inputs:
      collection_duration:
        description: 'Collection duration in minutes (max 240)'
        required: true
        default: '60'
        type: string
      collection_interval:
        description: 'Data collection interval in seconds'
        required: true
        default: '15'
        type: string

jobs:
  extended-collection:
    runs-on: ubuntu-latest
    timeout-minutes: 300  # 5 hours max
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create data directories
      run: |
        mkdir -p data/raw data/processed data/outputs/reports data/outputs/logs data/archive
        
    - name: Configure collection parameters
      run: |
        echo "COLLECTION_DURATION=${{ github.event.inputs.collection_duration }}" >> $GITHUB_ENV
        echo "COLLECTION_INTERVAL=${{ github.event.inputs.collection_interval }}" >> $GITHUB_ENV
        
    - name: Run Extended Order Book Collection
      run: |
        # Create a modified version of the script for extended collection
        python -c "
        import sys
        sys.path.append('src')
        from AlphaCrypto_OrderBook import OrderBookApp
        import time
        
        app = OrderBookApp()
        duration_minutes = int('${{ github.event.inputs.collection_duration }}')
        interval_seconds = int('${{ github.event.inputs.collection_interval }}')
        
        print(f'Starting extended collection: {duration_minutes} minutes, {interval_seconds}s intervals')
        
        # Run collection for specified duration
        end_time = time.time() + (duration_minutes * 60)
        collection_count = 0
        
        while time.time() < end_time:
            try:
                app.run_single_analysis()
                collection_count += 1
                print(f'Collection #{collection_count} completed')
                time.sleep(interval_seconds)
            except KeyboardInterrupt:
                break
            except Exception as e:
                print(f'Collection error: {e}')
                time.sleep(5)
                
        print(f'Extended collection completed: {collection_count} data points collected')
        "
        
    - name: Upload Extended Collection Data
      uses: actions/upload-artifact@v4
      with:
        name: extended-orderbook-${{ github.run_number }}-${{ github.event.inputs.collection_duration }}min
        path: |
          data/raw/
          data/processed/
          data/outputs/
        retention-days: 14  # Keep extended data longer